#pragma checksum "C:\Users\marti\source\repos\WebApplication6\Views\Home\About.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c699fb626b31daacaf101369d97523f3162b0e42"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_About), @"mvc.1.0.view", @"/Views/Home/About.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\marti\source\repos\WebApplication6\Views\_ViewImports.cshtml"
using WebApplication6;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\marti\source\repos\WebApplication6\Views\_ViewImports.cshtml"
using WebApplication6.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c699fb626b31daacaf101369d97523f3162b0e42", @"/Views/Home/About.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a098c058a45249d01a4d3ff09faab920e5a7f7f9", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_About : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!doctype html>\r\n<html lang=\"en\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c699fb626b31daacaf101369d97523f3162b0e423226", async() => {
                WriteLiteral(@"
	<meta charset=""UTF-8"">
	<meta name=""viewport""
		  content=""width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"">
	<meta http-equiv=""X-UA-Compatible"" content=""ie=edge"">
	<title>Tic Tac Toe</title>
	<link rel=""stylesheet"" href=""style.css"">
	<style>
		body {
			font-family: ""Arial"", sans-serif;
		}

		section {
			text-align: center;
		}

		.game--title {
			font-size: 100px;
			color: #d7a62f;
			margin: 10px auto;
		}

		.game--container {
			display: grid;
			grid-template-columns: repeat(3, auto);
			width: 306px;
			margin: 10px auto;
			background-color: #11213a;
			color: #04c0b2;
		}

		.cell {
			font-family: ""Permanent Marker"", cursive;
			width: 100px;
			height: 100px;
			box-shadow: 2px 2px 2px 2px #ecd7ba;
			border: 2px solid #ecd7ba;
			cursor: pointer;
			line-height: 100px;
			font-size: 60px;
		}

		.game--status {
			font-size: 50px;
			color: #d7a62f;
			margin: 20px auto;
		}

		.game--restart {
			");
                WriteLiteral("background-color: #f7e4ac;\r\n\t\t\twidth: 200px;\r\n\t\t\theight: 50px;\r\n\t\t\tfont-size: 25px;\r\n\t\t\tcolor: #5586e2;\r\n\t\t\tbox-shadow: 2px 2px 2px 2px #d86c23;\r\n\t\t\tborder: 2px solid #d86c23;\r\n\t\t}\r\n\t</style>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c699fb626b31daacaf101369d97523f3162b0e425498", async() => {
                WriteLiteral(@"
	<section>
		<h1 class=""game--title"">Tic Tac Toe</h1>
		<div class=""game--container"">
			<div data-cell-index=""0"" class=""cell""></div>
			<div data-cell-index=""1"" class=""cell""></div>
			<div data-cell-index=""2"" class=""cell""></div>
			<div data-cell-index=""3"" class=""cell""></div>
			<div data-cell-index=""4"" class=""cell""></div>
			<div data-cell-index=""5"" class=""cell""></div>
			<div data-cell-index=""6"" class=""cell""></div>
			<div data-cell-index=""7"" class=""cell""></div>
			<div data-cell-index=""8"" class=""cell""></div>
		</div>
		<h2 class=""game--status""></h2>
		<button class=""game--restart"">Restart Game</button>
	</section>

	<script>const statusDisplay = document.querySelector('.game--status');

		let gameActive = true;
		let currentPlayer = ""X"";
		let gameState = ["""", """", """", """", """", """", """", """", """"];

		const winningMessage = () => `Player ${currentPlayer} has won!`;
		const drawMessage = () => `Game ended in a draw!`;
		const currentPlayerTurn = () => `It's ${currentPlayer}'s turn`;
");
                WriteLiteral(@"
		statusDisplay.innerHTML = currentPlayerTurn();

		const winningConditions = [
			[0, 1, 2],
			[3, 4, 5],
			[6, 7, 8],
			[0, 3, 6],
			[1, 4, 7],
			[2, 5, 8],
			[0, 4, 8],
			[2, 4, 6]
		];

		function handleCellPlayed(clickedCell, clickedCellIndex) {
			gameState[clickedCellIndex] = currentPlayer;
			clickedCell.innerHTML = currentPlayer;
		}

		function handlePlayerChange() {
			currentPlayer = currentPlayer === ""X"" ? ""O"" : ""X"";
			statusDisplay.innerHTML = currentPlayerTurn();
		}

		function handleResultValidation() {
			let roundWon = false;
			for (let i = 0; i <= 7; i++) {
				const winCondition = winningConditions[i];
				let a = gameState[winCondition[0]];
				let b = gameState[winCondition[1]];
				let c = gameState[winCondition[2]];
				if (a === '' || b === '' || c === '') {
					continue;
				}
				if (a === b && b === c) {
					roundWon = true;
					break
				}
			}

			if (roundWon) {
				statusDisplay.innerHTML = winningMessage();
				gameActive ");
                WriteLiteral(@"= false;
				return;
			}

			let roundDraw = !gameState.includes("""");
			if (roundDraw) {
				statusDisplay.innerHTML = drawMessage();
				gameActive = false;
				return;
			}

			handlePlayerChange();
		}

		function handleCellClick(clickedCellEvent) {
			const clickedCell = clickedCellEvent.target;
			const clickedCellIndex = parseInt(clickedCell.getAttribute('data-cell-index'));

			if (gameState[clickedCellIndex] !== """" || !gameActive) {
				return;
			}

			handleCellPlayed(clickedCell, clickedCellIndex);
			handleResultValidation();
		}

		function handleRestartGame() {
			gameActive = true;
			currentPlayer = ""X"";
			gameState = ["""", """", """", """", """", """", """", """", """"];
			statusDisplay.innerHTML = currentPlayerTurn();
			document.querySelectorAll('.cell').forEach(cell => cell.innerHTML = """");
		}


		document.querySelectorAll('.cell').forEach(cell => cell.addEventListener('click', handleCellClick));
		document.querySelector('.game--restart').addEventListener('click', h");
                WriteLiteral("andleRestartGame);</script> \r\n\t\t\t\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
